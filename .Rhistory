install.packages(c("ggplot2", "ggplot2movies", "devtools", "DataClean"))
install.packages("swirl")
packageversion("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <-5+7
x
y<-x-3
y
z <-c(1.1,9,3.14)
c
c
c()
c
C
c
c..
c
c.
c()
C
info()
?c
z
c(z,555,z)
z*2+100
my_sqrt <-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1:4)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
5+7
x<-5+7
x
y<-x-3
y
z <-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <-sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+ c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x <-9
ls()
list.files()
?list.files
args(list.fies)
args (list.files())
args(list.files)
old.dir <-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R"to"mytest2.R")
file.rename(mytest.R to mytest2.R)
?file.rename
file.rename("mytest.R")
file.rename("mytest.R" to mytest2.R)
file.rename("mytest.R" to"mytest2.R")
file.rename(mytest.R to mytest2.R)
file.rename("mytest.R" "mytest2.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
args(file.path)
file.path("folder1","folder2")
?dir.create
dir.create(("testdir2")file.path("testdir2"))
dir.create("testdir2")file.path("testdir3"))
dir.create("testdir2")file.path("testdir3"))
play()
getwd()
list.files()
file.copy("mytest3.R","mytest4.R")
list.files()
file.rename("mytest4.R","mytest5.R")
file.remove("mytest5.R")
ls()
getwd()
list.files()
nxt()
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
`:`
?`:`
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <-seq(5,10,length=30)
length(my_seq)
play()
seq(0,100,by=10)
nxt()
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
play()
rep(c(0,1,2,3,5),times=30)
rep(c(0,1,2,3,4,5),each=30))
rep(c(0,1,2,3,4,5),each=30)
nxt()
rep(c(0,1,2),each=10)
num_vect <-c(0.5,55,-10,6)
tf <-num_vect <1
tf
num_vect <=6
num_vect >=6
my_char <-c("My","name","is")
my_char
paste(my_char,collapse= " ")
my_name <-c(my_char,"Jerry")
my_name
paste(my_name,collapse=" ")
play()
world <-c("hello","world","hate","pakistan")
wolrd
world
newworld<-paste(world,collapse=" ")
newworld
nxt()
paste("Hello","World!",sep=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep=" ")
paste((1:3),c("X","Y","Z"),sep=" ")
paste((1:3),c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z <-rep(NA,1000)
my_data <-sample(c(y,z),100)
is.na(my_data)
my_na <-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0\0
0/0
Inf-Inf
x
x[1:10]
x[is.na()]
x[is.na(x)]
y <-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x[3],x[5],x[7])
[c(3,5,7)]
x[!is.na(x)&x>0]
c(3,5,70
c(3,5,7)
c(3,5,7)
t<-x[c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c[2,10)]
x[-c(2,10)]
vect <-c(foo=11,bar=2,norf=NA)
vect
names()
names(foo)
names(vect)
vect2<-c(11,2,NA)
(vect2) <-c("foo","bar","norf")
names(vect2) <-c("foo","bar","norf")
identical(vect,vect2)
vec["bar"]
vect["bar"]
vect[c("foo","bar")]
my_vector <-c(1:20)
my_vector <-1:20
my_vector
dim(my_vector)
length()
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matric()
?matrix()
?matrix
my_matrix2 <-matrix[c(1:20),4,5)]
my_matrix2 <-matrix[c(1:20),4,5)]
my_matrix2 <-c[matrix(1:20),4,5)]
my_matrix2 <-matrix(c(1:20),4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(data.frame)
class(my_data)
cnames <-c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
colnames(cnames)
colnames(my_data)<-cnames
my_data
q()
add2 <-function(x+y){
x + y
}
add2 <- function(x,y) {
x+y
}
add2 <-(3.5)
add2(3,5)
add2(3,5)
printmessage2 <- function(x){
if(is.na(x))
print("x is a missing value !")
else if (x>0)
print("x is greater than zero")
else (x <0)
print(" x is lesser than zero")
}
print message(3)
printmessage2 <- function(x){
if(is.na(x))
print("x is a missing value !")
else if (x>0)
print("x is greater than zero")
else (x <0)
print(" x is lesser than zero")
invisible(x)
}
printmessage2(3)
printmessage2 <- function(x){
if(is.na(x))
print("x is a missing value !")
else if (x>0)
print("x is greater than zero")
else
print(" x is lesser than zero")
invisible(x)
}
printmessage2(3)
printmessage2(na)
x <-log(-1)
printmessage2(x)
library(xlsx)
library(xlsxjars)
install.packages('rJava',.libPaths()[1],'http://www.rforge.net/rJava/files/')
install.packages('rJava',.libPaths()[1],'http://www.rforge.net')
install.packages('rJava',repos='http://www.rforge.net')
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jdk1.7.0_51\\jre')
library('rJava')
library(xlsx)
Sys.getenv("JAVE HOME")
Sys.getenv("JAVA_HOME")
ctr <-1
while {}
ctr <-1
while {}
ctr <-1
while (ctr <=7) {}
ctr <-1
while (ctr <=7){
print(paste("the ctr is set to",ctr))
ctr<-ctr+1
}
ctr <-1
while (ctr <=7){
print(paste("the ctr is set to",ctr))
}
ctr <-1
while (ctr <=7){
if (ctr %%5==0){
break
}
print(paste("the ctr is set to",ctr))
ctr <-ctr+1
}
math_magic<-function(a,b){
a*b+a/b
}
math_magic(4,2)
math_magic(4,0)
math_magic<-function(a,b){
if (b==0){
return(0)
}
a*b+a/b
}
math_magic(4,0)
pow_two <- function(x,print_info=TRUE) {
y <- x ^ 2
if(print_info==TRUE)
{
print(paste(x, "to the power two equals", y))
}
return(y)
}
increment <- function(x, inc = 1) {
x <- x + inc
x
}
count <- 5
a <- increment(count, 2)
b <- increment(count)
count <- increment(count, 2)
increment <- function(x, inc = 1) {
x <- x + inc
x
}
install.packages(ggvis)
install.packages("ggvis")
library(ggvis)
ggvis(mtcars,~wt,~hp)
install.packages("Rmysql")
install.packages("RMySQL")
usscDb<-dbconnect(MySql(),user="genome",host="genome-mysql.cse.uscs.edu")
usscDb<-dbConnect(MySql(),user="genome",host="genome-mysql.cse.uscs.edu")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.uscs.edu")
nyc <-list(pop=840342199,boroughs=c("Manhattan","Bronx","Brooklyn","Queens","Staten Island")
nyc <-list(pop=840342199,boroughs=c("Manhattan","Bronx","Brooklyn","Queens","Staten Island"),capital=False)
nyc <-list(pop=840342199,boroughs=c("Manhattan","Bronx","Brooklyn","Queens","Staten Island"),capital=FALSE)
for(info in nyc) {
print(class(info))
}
lapply(nyc,class)
oil_prices <- list(2.34,2.45,2.98,3.05,3.09)
lapply(oil_prices,multiply,factor==3)
lapply(oil_prices,multiply,factor=3)
oil_prices <- list(2.34,2.45,2.98,3.05,3.09)
multiply <- function(x,factor) {
x*factor }
lapply(oil_prices,multiply,factor=3)
unlist(lapply(oil_prices,multiply,factor=3))
cities <-c("New York","Paris","new Delhi","hong konk")
sapply(cities,unique)
sapply(cities,nchar)
q()
library(datasets)
data(cars)
with(cars,plot(speed,distance))
with(cars,plot(speed,dist))
with(cars,plot(speed,dist),color=green)
with(cars,plot(speed,dist),speed.color=green)
with(cars,plot(speed,dist),speed.color=green)
lbrary(lattice)
library(lattice)
state <-data.frame(state.x77,region=state.region)
xyplot(Life.Exp~Income|region,data=state,layout=c(4,1))
library(ggplot2)
data(mpg)
gplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
library(datasets)
hist(airquality$ozone)
hist(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone,main="ozone & wind in NYC"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
par(mfrow=c(1,2))
with(airquality,{}
library(lattice)
library(datasets)
##simple scaterplot
xyplot(Ozone~Wind,airquality)
airquality<-transform(airquality,Month=factor(Month))
xyplot(Ozone~ Wind|Month,airquality,layout=c(5,1))
xyplot(Ozone~ Wind|Month,airquality,layout=c(5,2))
xyplot(Ozone~ Wind|Month,airquality,layout=c(5,3))
xyplot(Ozone~ Wind|Month,airquality,layout=c(1,5))
xyplot(Ozone~ Wind|Month,airquality,layout=c(5,1))
xyplot(Ozone~ Wind|Month,airquality,layout=c(6,1))
xyplot(Ozone~ Wind|Month,airquality,layout=c(5,1))
set.seed(10)
x<rnorm(100)
set.seed(10)
x <- rnorm(100)
f <-rep(0:1,each=50)
y <-x+f-f*x+rnorm(100,sd=0.5)
f <-factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,panel=function(x,y,...){}
xyplot(y~x|f,panel=function(x,y,...){
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
panel.xyplot(x,y,...)
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
library(ggplot2)
str(mpg)
qplot(disp,hwy,mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,geom=("point","smooth")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,fill=drv,binwidth=10)
qplot(hwy,data=mpg,fill=drv,binwidth=2)
qplot(hwy,data=mpg,fill=drv,binwidth=1)
qplot(hwy,data=mpg,fill=drv,binwidth=0.5)
qplot(hwy,data=mpg,fill=drv,binwidth=1.5)
qplot(hwy,data=mpg,fill=drv,binwidth=1.8)
qplot(hwy,data=mpg,fill=drv,binwidth=2.8)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(ggplot2)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
dataFrame<-data.frame(x=x,y=y)
dist(dataFrame)
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
dataFrame<-data.frame(x=x,y=y)
distxy <-dist(dataFrame)
hClustering <-hclust(distxy)
plot(hClustering)
pairs(airquality)
library(datasets)
data("airquality")
summary(airquality)
library("rmarkdown", lib.loc="~/R/win-library/3.3")
install.packages("rmarkdown")
library("xtable", lib.loc="~/R/win-library/3.3")
install.packages("xtable")
setwd("C:/Users/Jerry Divya/Desktop/Data Scientist Specialization course/Reproducible research/Project 1")
```
plot(steps_interval$interval,steps_interval$steps,type="l",main="AVerage Steps per 5 minute interval",xlab="Interval", Y lab="Number of Steps")
```{r,warning=FALSE}
